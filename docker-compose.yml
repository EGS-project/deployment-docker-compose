version: '3.9'

services:

# INFRASTRUCTURE
  mysql:
    image: mysql/mysql-server:8.0
    container_name: mysql
    cap_add:
      - SYS_NICE
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: super_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
    restart: on-failure
    volumes:
      - ./mysql/config.sql:/docker-entrypoint-initdb.d/data.sql

  activemq:
    image: rmohr/activemq:5.15.9
    container_name: activemq
    ports:
      - "8161:8161"
      - "61616:61616"
      - "61613:61613"
    environment:
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: admin

  localstack:
    image: localstack/localstack-pro
    container_name: localstack
    env_file: ./localstack/deploy.env
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
      - "53:53"                # DNS config (required for Pro)
      - "53:53/udp"            # DNS config (required for Pro)
      - "443:443"              # LocalStack HTTPS Gateway (required for Pro)
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack/volume:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # - "--entrypoints.web.address=:80"
      - "--configFile=/etc/traefik/traefik.yml"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"

# SERVICES
  composer:
    image: registry.deti:5432/egs-conv/composer-service:v1
    container_name: composer
    ports:
      - "8888:8888"
    depends_on:
      - mysql
      - activemq
    restart: on-failure
    env_file: ./composer/deploy.env
    environment:
      - PYTHONPATH=/home/app

  conversion:
    image: registry.deti:5000/egs-conv/conversion-service:v1
    container_name: conversion
    env_file: ./conversion/deploy.env
    depends_on:
      - activemq
      - composer
    
  s3connector:
    image: registry.deti:5000/egs-conv/s3connector-service:v1
    container_name: s3connector
    env_file: ./s3connector/deploy.env
    depends_on:
      - localstack
      - activemq
      - composer

  notification:
    image: registry.deti:5000/egs-conv/notification-service:v1
    container_name: notification
    env_file: ./notification/deploy.env
    depends_on:
      - localstack
      - activemq
      - composer

  web:
    image: registry.deti:5000/egs-conv/web-service:v1
    container_name: web
    env_file: ./web/deploy.env

